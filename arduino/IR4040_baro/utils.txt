# File contains functions that I donot use not more




// CALCUATE AVG. FROM FIRST 10 SAMPLES AND SUBTRACT IT FROM CURRENT SENSOR VALUE (STATIC AVG. SUB)
//  int num_samples_avg = 10;
//  
//  for (int i = 0; i < num_devices_; i++) {
//    for (int j = 0; j < NFINGERS; j++) {
//      for (int k = 0; k < num_samples_avg; k++) {
//        unsigned long long int prox = readProximity(i2c_ids_[i],sensor_ports[j]);
//        prox_value_arr[i][j] = prox_value_arr[i][j] + prox;
////        Serial.println((long) prox_value_arr[i][j]);
//      }
//    }
//  }
//
//
//  for (int i = 0; i < num_devices_; i++) {
//    for (int j = 0; j < NFINGERS; j++) {
//      for (int k = 0; k < num_samples_avg; k++) {
//        unsigned long long int prss = readPressure(i2c_ids_[i], sensor_ports[j], j);
//        prss_value_arr[i][j] = prss_value_arr[i][j] + prss; 
////        Serial.println((long) prss_value_arr[i][j]);          
//      }
//    }
//  }
//  
//  Serial.print("Averaged Proximity value of sensor at mux 0 port 0: ");
//  unsigned long long int avg_prox = prox_value_arr[0][0] / 10.0;
//  Serial.println((long) avg_prox);
//  
//  Serial.print("Averaged Pressure value of sensor at mux 0 port 0: ");
//  unsigned long long int avg_prss = prss_value_arr[0][0] / 10.0; 
//  Serial.println((long) avg_prss);
//  
////  Serial.println("DONE reading values to set baseline");
////  Serial.print(proximity_value[0][0]);
//  
//  starttime = micros();
//
//  while(1){
//    unsigned long long int prox = readProximity(i2c_ids_[0],sensor_ports[0]); 
//    Serial.print((long) (prox - avg_prox));
//    Serial.print('\t');
//    unsigned long long int prss = readPressure(i2c_ids_[0], sensor_ports[0], 0);
//    Serial.println((long) (prss - avg_prss));
//    }





// HIGH-PASS FILTER
// https://www.norwegiancreations.com/2016/03/arduino-tutorial-simple-high-pass-band-pass-and-band-stop-filtering/

// global variables
unsigned long long int EMA_a = 0.1;
unsigned long long int EMA_S = 0;
unsigned long long int prox_highpass = 0;

// In setup()
EMA_S = readPressure(i2c_ids_[0], sensor_ports[0], 0);

// In loop()
//  unsigned long long int prox = readPressure(i2c_ids_[0], sensor_ports[0], 0);
//  EMA_S = (EMA_a*prox) + ((1-EMA_a)*EMA_S);  //run the EMA
//  prox_highpass = prox - EMA_S;                   //calculate the high-pass signal
//  Serial.println((long) prox_highpass);
